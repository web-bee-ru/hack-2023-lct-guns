# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  caddy:
    image: caddy:2.7.5-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
  mmtx:
    image: bluenviron/mediamtx:1.2.1-ffmpeg
    # restart: unless-stopped
    volumes:
      - ./mmtx/mediamtx.yml:/mediamtx.yml
    environment:
      MTX_PROTOCOLS: tcp
    ports:
      - 8554:8554 # RTSP TCP
      - 1935:1935 # ???
      - 8888:8888 # HLS
      - 8889:8889 # ???
      - 9997:9997 # API
      - 8890:8890/udp # ???
  db:
    image: postgres:12.16-bullseye
    # restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: 2023_lct_guns
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
  minio:
    image: minio/minio:RELEASE.2023-11-01T18-37-25Z
    # restart: unless-stopped
    volumes:
      # - minio_data:/data
      - ./minio/data:/data
    environment:
      MINIO_ROOT_USER: dev
      MINIO_ROOT_PASSWORD: devdevdev
    ports:
      - 9000:9000
      - 9090:9090
    command: server --console-address ":9090" /data
  guns-api:
    depends_on:
      - db
      - minio
    # restart: unless-stopped
    build:
      context: ./api
    ports:
      - 8000:8000
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/2023_lct_guns
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY_ID: dev
      S3_SECRET_ACCESS_KEY: devdevdev
      S3_BUCKET: 2023-lct-guns-webbee-files # Should be public
  guns-ui:
    # restart: unless-stopped
    build:
      context: ./ui
    ports:
      - 3000:3000

volumes:
  postgres_data:
  minio_data:
